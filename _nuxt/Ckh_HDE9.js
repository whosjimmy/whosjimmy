import{$ as i,a0 as a,a1 as p,a2 as c,a3 as m,a4 as n,a5 as d}from"./BhCbTrWa.js";const v=i("departments",{state:()=>({departments:[]}),actions:{setDepartments(t){this.departments=t},addDepartment(t){this.departments.push(t)},removeDepartment(t){this.departments.splice(t,1)},addMovie({departmentIndex:t,movie:e}){this.departments[t].Movies.push(e)},removeMovie({departmentIndex:t,movieIndex:e}){this.departments[t].Movies.splice(e,1)},updateMovie({departmentIndex:t,movieIndex:e,movie:s}){this.departments[t].Movies[e]=s},addPhoto({departmentIndex:t,movieIndex:e,photo:s}){this.departments[t].Movies[e].Photos.push(s)},removePhoto({departmentIndex:t,movieIndex:e,photoIndex:s}){this.departments[t].Movies[e].Photos.splice(s,1)},async fetchDepartments(){try{const{$firestore:t}=a(),e=p(t,"departments"),r=(await c(e)).docs.map(o=>({id:o.id,...o.data()}));this.setDepartments(r)}catch(t){console.error("Error fetching departments:",t)}},async saveDepartment({department:t}){const{$firestore:e}=a();try{await m(n(e,"departments",t.id),t)}catch(s){throw new Error("Error saving department:",s)}},async saveAllDepartments(){const{$firestore:t}=a();try{const e=d(t);this.departments.forEach(s=>{const r=n(t,"departments",s.id);e.set(r,s)}),await e.commit()}catch(e){console.error("Error saving all departments:",e)}}},getters:{getDepartments:t=>t.departments}});export{v as u};
